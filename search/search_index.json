{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started Welcome to Momento the worlds first serverless caching service. Momento unlocks innovation at scale by giving developers an easy to use cache that works without any of the operational overhead required by traditional caching solutions. It is quick to provision, easy to use, and gives customers consistent performance. Momento allows developers to focus on their business logic, while giving them rapid access to an easy-to-use cache that has decades of mission critical scale experience and hard learned lessons already baked in. Quick start Install CLI The quickest way to get started is with our CLI. To get going simply install from our home brew tap. brew tap momentohq/tap brew install momento-cli To verify the CLI was installed correctly you can run our help command $ momento --help momento 0.12.8 CLI for Momento APIs USAGE: momento [OPTIONS] <SUBCOMMAND> OPTIONS: -h, --help Print help information -V, --version Print version information --verbose SUBCOMMANDS: account Manage Accounts cache Cache Operations configure Configure Momento Credentials help Print this message or the help of the given subcommand(s) Obtain an auth token Being a developer focused company you can sign up for an auth token to use Momentos APIs right from the command line. We are going to use the account command to obtain an API token for your desired region with the Momento CLI. $ momento account signup --region us-west-2 --email your-email@example.com You will be emailed the API token to use. You can configure your local cli to use this token by running the momento configure command. $ momento configure Token: // < Enter token from email here. Default Cache [default-cache]: my-first-cache // Name of cache to use on CLI by default. Default Ttl Seconds [600]: 30 // Sets the default TTL for cache entries. For demostration purposes we are setting this lower right now. [2022-03-31T15:31:25Z INFO momento::commands::cache::cache_cli] creating cache... [2022-03-31T15:31:33Z INFO momento::commands::configure::configure_cli] default cache successfully created Cache some data! You are now up and running with Momento! Lets check out the cache command to see how we can interact with our new cache. Note: You can use momento cache $SUBCOMMAND --help on any CLI commands to learn more $ momento cache --help momento-cache Cache Operations USAGE: momento cache [OPTIONS] <SUBCOMMAND> OPTIONS: -h, --help Print help information --verbose SUBCOMMANDS: create Creates a Momento Cache delete Deletes the cache get Gets item from the cache help Print this message or the help of the given subcommand(s) list Lists all momento caches set Stores a given item in cache Let's perform a set / get operation. We will make sure that the item disappears after the TTL has elapsed. $ momento cache set --key test --value value [2022-03-31T15:45:17Z INFO momento::commands::cache::cache_cli] setting key: test into cache: my-first-cache [2022-03-31T15:45:18Z INFO momento::commands::cache::cache_cli] set success $ momento cache get --key test [2022-03-31T15:45:25Z INFO momento::commands::cache::cache_cli] getting key: test from cache: my-first-cache value $ sleep 30 // wait for item to expire $ momento cache get --key test [2022-03-31T15:46:02Z INFO momento::commands::cache::cache_cli] getting key: test from cache: my-first-cache [2022-03-31T15:46:03Z INFO momento::commands::cache::cache_cli] cache miss And thats it! You are now caching data with Momento! \ud83c\udf89 Next steps Check out our SDKs! We currently have the following SDK's languages availabile. .NET Go Java JavaScript Python CLI\uff08MacOS/Linux Also check out our examples repo for hands on examples with the various sdks.","title":"Getting Started"},{"location":"#getting-started","text":"Welcome to Momento the worlds first serverless caching service. Momento unlocks innovation at scale by giving developers an easy to use cache that works without any of the operational overhead required by traditional caching solutions. It is quick to provision, easy to use, and gives customers consistent performance. Momento allows developers to focus on their business logic, while giving them rapid access to an easy-to-use cache that has decades of mission critical scale experience and hard learned lessons already baked in.","title":"Getting Started"},{"location":"#quick-start","text":"","title":"Quick start"},{"location":"#install-cli","text":"The quickest way to get started is with our CLI. To get going simply install from our home brew tap. brew tap momentohq/tap brew install momento-cli To verify the CLI was installed correctly you can run our help command $ momento --help momento 0.12.8 CLI for Momento APIs USAGE: momento [OPTIONS] <SUBCOMMAND> OPTIONS: -h, --help Print help information -V, --version Print version information --verbose SUBCOMMANDS: account Manage Accounts cache Cache Operations configure Configure Momento Credentials help Print this message or the help of the given subcommand(s)","title":"Install CLI"},{"location":"#obtain-an-auth-token","text":"Being a developer focused company you can sign up for an auth token to use Momentos APIs right from the command line. We are going to use the account command to obtain an API token for your desired region with the Momento CLI. $ momento account signup --region us-west-2 --email your-email@example.com You will be emailed the API token to use. You can configure your local cli to use this token by running the momento configure command. $ momento configure Token: // < Enter token from email here. Default Cache [default-cache]: my-first-cache // Name of cache to use on CLI by default. Default Ttl Seconds [600]: 30 // Sets the default TTL for cache entries. For demostration purposes we are setting this lower right now. [2022-03-31T15:31:25Z INFO momento::commands::cache::cache_cli] creating cache... [2022-03-31T15:31:33Z INFO momento::commands::configure::configure_cli] default cache successfully created","title":"Obtain an auth token"},{"location":"#cache-some-data","text":"You are now up and running with Momento! Lets check out the cache command to see how we can interact with our new cache. Note: You can use momento cache $SUBCOMMAND --help on any CLI commands to learn more $ momento cache --help momento-cache Cache Operations USAGE: momento cache [OPTIONS] <SUBCOMMAND> OPTIONS: -h, --help Print help information --verbose SUBCOMMANDS: create Creates a Momento Cache delete Deletes the cache get Gets item from the cache help Print this message or the help of the given subcommand(s) list Lists all momento caches set Stores a given item in cache Let's perform a set / get operation. We will make sure that the item disappears after the TTL has elapsed. $ momento cache set --key test --value value [2022-03-31T15:45:17Z INFO momento::commands::cache::cache_cli] setting key: test into cache: my-first-cache [2022-03-31T15:45:18Z INFO momento::commands::cache::cache_cli] set success $ momento cache get --key test [2022-03-31T15:45:25Z INFO momento::commands::cache::cache_cli] getting key: test from cache: my-first-cache value $ sleep 30 // wait for item to expire $ momento cache get --key test [2022-03-31T15:46:02Z INFO momento::commands::cache::cache_cli] getting key: test from cache: my-first-cache [2022-03-31T15:46:03Z INFO momento::commands::cache::cache_cli] cache miss And thats it! You are now caching data with Momento! \ud83c\udf89","title":"Cache some data!"},{"location":"#next-steps","text":"Check out our SDKs! We currently have the following SDK's languages availabile. .NET Go Java JavaScript Python CLI\uff08MacOS/Linux Also check out our examples repo for hands on examples with the various sdks.","title":"Next steps"},{"location":"apis/","text":"APIs Control APIs Create Cache Creates a cache with provided name Attributes: Name Type Description cacheName String Name of the cache to be created. Delete Cache Deletes a cache Attributes: Name Type Description cacheName String Name of the cache to be deleted. List Caches Lists all caches for the provided auth token. Name Type Description nextToken String Token for pagination of caches. Data APIs Cache Set Sets the value in cache with a given Time To Live (TTL) seconds. If a value for this key is already present it will be replaced by the new value. Name Type Description cacheName String Name of the cache. key []Byte The key under which the value is to be added. value []Byte The value to be stored. ttlSeconds int Time to Live for the item in Cache. Cache Get Get the cache value stored for the given key. Name Type Description cacheName String Name of the cache. key []Byte The key under which the value is to be added.","title":"APIs"},{"location":"apis/#apis","text":"","title":"APIs"},{"location":"apis/#control-apis","text":"","title":"Control APIs"},{"location":"apis/#create-cache","text":"Creates a cache with provided name Attributes: Name Type Description cacheName String Name of the cache to be created.","title":"Create Cache"},{"location":"apis/#delete-cache","text":"Deletes a cache Attributes: Name Type Description cacheName String Name of the cache to be deleted.","title":"Delete Cache"},{"location":"apis/#list-caches","text":"Lists all caches for the provided auth token. Name Type Description nextToken String Token for pagination of caches.","title":"List Caches"},{"location":"apis/#data-apis","text":"","title":"Data APIs"},{"location":"apis/#cache-set","text":"Sets the value in cache with a given Time To Live (TTL) seconds. If a value for this key is already present it will be replaced by the new value. Name Type Description cacheName String Name of the cache. key []Byte The key under which the value is to be added. value []Byte The value to be stored. ttlSeconds int Time to Live for the item in Cache.","title":"Cache Set"},{"location":"apis/#cache-get","text":"Get the cache value stored for the given key. Name Type Description cacheName String Name of the cache. key []Byte The key under which the value is to be added.","title":"Cache Get"},{"location":"guides/","text":"Guides Learn more about high level caching concepts and Momento architecture and features here.","title":"Guides"},{"location":"guides/#guides","text":"Learn more about high level caching concepts and Momento architecture and features here.","title":"Guides"},{"location":"tutorials/","text":"Tutorials Learn how to integrate Momento into real world example/frameworks the end-to-end examples are provided here.","title":"Tutorials"},{"location":"tutorials/#tutorials","text":"Learn how to integrate Momento into real world example/frameworks the end-to-end examples are provided here.","title":"Tutorials"},{"location":"videos/","text":"Videos Complete tutorials in video format for you to watch.","title":"Videos"},{"location":"videos/#videos","text":"Complete tutorials in video format for you to watch.","title":"Videos"}]}